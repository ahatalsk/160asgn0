        var body = new Cube();
        body.color = [1.0, 0.0, 0.0, 1.0];
        body.matrix.translate(0.0, -0.5, 0.0)
        body.matrix.rotate(g_redAngle, 0, 0, 1);
        var redCoordsMat = new Matrix4(body.matrix);
        body.matrix.scale(0.6, 0.3, 0.6);
        body.matrix.translate(-0.5, -0.5, 0.0);
        //var redCoordsMat = new Matrix4(body.matrix);
        body.render();
        
        var leftArm = new Cube();
        leftArm.color = [1.0, 1.0, 0.0, 1.0];
        leftArm.matrix = redCoordsMat;
        leftArm.matrix.translate(0.0, 0.1, 0.1);
        leftArm.matrix.rotate(g_yellowAngle, 0, 0, 1);
        var yellowCoordsMat = new Matrix4(leftArm.matrix);
        leftArm.matrix.scale(0.3, 0.7, 0.4);
        leftArm.matrix.translate(-0.5, 0.0, 0.0);
        leftArm.render();
        
        var box = new Cube();
        box.color = [1.0, 0.0, 1.0, 1.0];
        box.matrix = yellowCoordsMat;
        box.matrix.translate(0.0, 0.65, 0.0);
        box.matrix.rotate(g_magentaAngle, 0, 0, 1);
        box.matrix.scale(0.2, 0.5, 0.2);
        box.matrix.translate(-0.5, 0.0, 0.4);
        box.render();
        
            var finCoordsMat = new Matrix4(fin.matrix);
        
    var finTop = new Cube();
    finTop.color = bodyColor;
    finTop.matrix = finCoordsMat;
    finTop.matrix.translate(0.7, 0.5, 0.2);
    finTop.matrix.scale(0.5, 0.5, 0.5);
    fin.matrix.translate(-0.4, -0.7, -0.45);
    finTop.render();
    
    
            // Front of cube
        gl.uniform4f(u_FragColor, rgba[0] * 0.9, rgba[1] * 0.9, rgba[2] * 0.9, rgba[3]);
        drawTriangle3D([0.0,0.0,0.0,    1.0,1.0,0.0,    1.0,0.0,0.0]);
        drawTriangle3D([0.0,0.0,0.0,    0.0,1.0,0.0,    1.0,1.0,0.0]);
        
        // Back of cube
        drawTriangle3D([0.0,0.0,1.0,    1.0,1.0,1.0,    1.0,0.0,1.0]);
        drawTriangle3D([0.0,0.0,1.0,    0.0,1.0,1.0,    1.0,1.0,1.0]);
        
        // Top of cube
        gl.uniform4f(u_FragColor, rgba[0], rgba[1], rgba[2], rgba[3]);
        drawTriangle3D([0.0,1.0,0.0,    0.0,1.0,1.0,    1.0,1.0,1.0]);
        drawTriangle3D([0.0,1.0,0.0,    1.0,1.0,1.0,    1.0,1.0,0.0]);
        
        // Bottom of cube
        gl.uniform4f(u_FragColor, rgba[0] * 0.5, rgba[1] * 0.5, rgba[2] * 0.5, rgba[3]);
        drawTriangle3D([0.0,0.0,0.0,    1.0,0.0,1.0,    1.0,0.0,0.0]);
        drawTriangle3D([0.0,0.0,0.0,    0.0,0.0,1.0,    1.0,0.0,1.0]);
        
        // Right side of cube
        gl.uniform4f(u_FragColor, rgba[0] * 0.8, rgba[1] * 0.8, rgba[2] * 0.8, rgba[3]);
        drawTriangle3D([1.0,1.0,0.0,    1.0,0.0,1.0,    1.0,0.0,0.0]);
        drawTriangle3D([1.0,1.0,0.0,    1.0,1.0,1.0,    1.0,0.0,1.0]);
        
        // Left side of cube
        drawTriangle3D([0.0,1.0,0.0,    0.0,0.0,1.0,    0.0,0.0,0.0]);
        drawTriangle3D([0.0,1.0,0.0,    0.0,1.0,1.0,    0.0,0.0,1.0]);
